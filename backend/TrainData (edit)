from LoadData import x_tensor, y_tensor, class_names
import tensorflow as tf
import numpy as np
from sklearn.model_selection import train_test_split
from keras.models import Sequential
import matplotlib.pyplot as plt
from keras.layers import Dense, Conv2D, MaxPooling2D, Flatten
from keras.optimizers import Adam

tf.keras.backend.clear_session()

print(class_names)
x_train, x_test, y_train, y_test = train_test_split(x_tensor, y_tensor, test_size=0.1, random_state=8)
output_dim = y_train.shape[1]

model = Sequential([
    Conv2D(2, (2, 2), strides=(2, 2), padding='same', activation='relu', input_shape=(586, 1048, 3)),
    MaxPooling2D(pool_size=(2, 2), strides=(2, 2)),
    Flatten(),
    Dense(2, activation='relu'),
    Dense(output_dim, activation='linear', use_bias=True)
])

model.summary()
model.compile(optimizer=Adam(learning_rate=0.01), loss='mse', metrics=['accuracy'])

model.fit(x_train, y_train, epochs=3, validation_data=(x_test, y_test), batch_size=1)
model.save('model_v3', save_format='h5')
